env:
  # You may want to update this to whatever the latest version is, or keep it
  # the same as your local machines. However, I have only tested it with 1.8.0+.
  # There should be a time in the future when this is not necessary - it is
  # explained in more detail below.
  DOCKER_COMPOSE_VERSION: 1.8.0

before_install:
  - sudo service mysql stop
  # update is required to update the repositories to see the new packages for
  # Docker.
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - sudo apt-get update

  # Now we can install the newer docker-engine which is required for the newer
  # docker-composer we will install next. The messy options are to force it to
  # be non-interactive (normally it asks you a bunch of config questions).
  - sudo apt-get install --force-yes -y docker-ce yarn

  # Print out the current docker-compose version. Once this reports 1.6+ then we
  # do not need the following steps.
  - docker-compose --version


  # As of the writing of this script Travis has docker-compose v1.4.2, we need
  # to update it to 1.8+. $DOCKER_COMPOSE_VERSION is provide from the `env`
  # above.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

  # Setup your application stack. You may need to tweak these commands if you
  # doing out-of-the-ordinary docker-compose builds.
  - docker-compose pull
  - docker-compose build
  - docker-compose up -d
  - sudo chmod 777 . -R
  - mv .env.example .env
  - docker exec -ti -u www laravel_php_1 mkdir vendor
  - docker exec -ti -u www laravel_php_1 composer install
  - yarn
  - yarn run build
  - docker exec -ti -u www laravel_php_1 php artisan migrate

script:
  - docker exec -ti -u www laravel_php_1 php /var/www/vendor/bin/phpunit
  - docker exec -ti -u www laravel_php_1 php /var/www/vendor/bin/behat
